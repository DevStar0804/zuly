{"remainingRequest":"D:\\working\\Vue\\zuly\\zuly\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\working\\Vue\\zuly\\zuly\\src\\pages\\Store.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"D:\\working\\Vue\\zuly\\zuly\\src\\pages\\Store.vue","mtime":1604105243779},{"path":"D:\\working\\Vue\\zuly\\zuly\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\working\\Vue\\zuly\\zuly\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\working\\Vue\\zuly\\zuly\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\working\\Vue\\zuly\\zuly\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\working\\Vue\\zuly\\zuly\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\working\\Vue\\zuly\\zuly\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICJ+dmFyaWFibGVzIjsKdWxbZGF0YS10eXBlPSJ0b2RvX2xpc3QiXSB7CiAgcGFkZGluZy1sZWZ0OiAwOwp9CmxpW2RhdGEtdHlwZT0idG9kb19pdGVtIl0gewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IHJvdzsKfQoudG9kby1jaGVja2JveCB7CiAgYm9yZGVyOiAycHggc29saWQgJGNvbG9yLWJsYWNrOwogIGhlaWdodDogMC45ZW07CiAgd2lkdGg6IDAuOWVtOwogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgbWFyZ2luLXJpZ2h0OiAxMHB4OwogIG1hcmdpbi10b3A6IDAuM3JlbTsKICB1c2VyLXNlbGVjdDogbm9uZTsKICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lOwogIGN1cnNvcjogcG9pbnRlcjsKICBib3JkZXItcmFkaXVzOiAwLjJlbTsKICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsKICB0cmFuc2l0aW9uOiAwLjRzIGJhY2tncm91bmQ7Cn0KLnRvZG8tY29udGVudCB7CiAgZmxleDogMTsKICA+IHA6bGFzdC1vZi10eXBlIHsKICAgIG1hcmdpbi1ib3R0b206IDA7CiAgfQogID4gdWxbZGF0YS10eXBlPSJ0b2RvX2xpc3QiXSB7CiAgICBtYXJnaW46IC41cmVtIDA7CiAgfQp9CmxpW2RhdGEtZG9uZT0idHJ1ZSJdIHsKICA+IC50b2RvLWNvbnRlbnQgewogICAgPiBwIHsKICAgICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7CiAgICB9CiAgfQogID4gLnRvZG8tY2hlY2tib3ggewogICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLWJsYWNrOwogIH0KfQpsaVtkYXRhLWRvbmU9ImZhbHNlIl0gewogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKfQo="},{"version":3,"sources":["Store.vue"],"names":[],"mappingsm2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Store.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div class=\"container mt-3\">\n    <small class=\"text-muted\">{{ $options.__file }}</small>\n    <h1 class=\"text-primary font-weight-bold\">\n      <router-link to=\"/\"\n        ><img\n          src=\"~bootstrap-icons/icons/caret-left-fill.svg\"\n          alt=\"caret icon\"\n          width=\"30\"\n          height=\"30\"\n      /></router-link>\n      Vetrina digitale di: {{ store.company_name }}\n    </h1>\n    <hr />\n    <!-- <div class=\"row alert-danger\">TODO</div> -->\n    <div class=\"row m-3\">\n      <div class=\"col\">\n        <!-- <pre>{{ store }}</pre> -->\n        <!-- display slide images -->\n        <div id=\"carouselExampleCaptions\" class=\"carousel slide\">\n          <div class=\"carousel-inner\">\n            <div\n              :class=\"imgurl.classname\"\n              v-for=\"imgurl in ImgUrls\"\n              :key=\"imgurl.id\"\n            >\n              <div class=\"row justify-content-md-center\">\n                <div class=\"col col-md-auto\">\n                  <img\n                    :src=\"imgurl.url\"\n                    class=\"rounded mx-auto d-block\"\n                    alt=\"Image\"\n                    height=\"200\"\n                    width=\"200\"\n                    @click=\"SelectLogo(imgurl.id)\"\n                  />\n                </div>\n                <div class=\"col col-md-1\">\n                  <button\n                    type=\"button\"\n                    class=\"btn-close\"\n                    aria-label=\"Close\"\n                    @click=\"DeleteImage(imgurl.id)\"\n                  ></button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <a\n            class=\"carousel-control-prev\"\n            href=\"#carouselExampleCaptions\"\n            role=\"button\"\n            data-slide=\"prev\"\n          >\n            <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n            <span class=\"visually-hidden\">Previous</span>\n          </a>\n          <a\n            class=\"carousel-control-next\"\n            href=\"#carouselExampleCaptions\"\n            role=\"button\"\n            data-slide=\"next\"\n          >\n            <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n            <span class=\"visually-hidden\">Next</span>\n          </a>\n        </div>\n\n        <!-- upload images -->\n        <form class=\"input-group mb-3\">\n          <div class=\"form-file\">\n            <input\n              type=\"file\"\n              :name=\"uploadFieldName\"\n              :disabled=\"isSaving\"\n              @change=\"filesChange($event.target.name, $event.target.files)\"\n              accept=\"image/*\"\n            />\n          </div>\n        </form>\n        <br />\n\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <!-- diaplsy company name -->\n            <div class=\"input-group mb-3\">\n              <span class=\"input-group-text\" id=\"companyname\"\n                >COMPANY NAME</span\n              >\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"company_name\"\n                :value=\"store.company_name\"\n                @blur=\"UpdateCompany($event)\"\n                aria-label=\"Sizing example input\"\n                aria-describedby=\"companyname\"\n              />\n            </div>\n\n            <!-- diaplsy address and city name -->\n            <div class=\"input-group mb-3\">\n              <span class=\"input-group-text\" id=\"address\">ADDRESS</span>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"address\"\n                :value=\"store.address\"\n                @blur=\"UpdateCompany($event)\"\n                aria-label=\"Sizing example input\"\n                aria-describedby=\"address\"\n              />\n              <span class=\"input-group-text\" id=\"city\">CITY</span>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"city\"\n                :value=\"store.city\"\n                @blur=\"UpdateCompany($event)\"\n                aria-label=\"Sizing example input\"\n                aria-describedby=\"city\"\n              />\n            </div>\n\n            <!-- diaplsy zip, vat and fiscal_code name -->\n            <div class=\"input-group mb-3\">\n              <span class=\"input-group-text\" id=\"zip\">ZIP</span>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"zip\"\n                :value=\"store.zip\"\n                @blur=\"UpdateCompany($event)\"\n                aria-label=\"Sizing example input\"\n                aria-describedby=\"zip\"\n              />\n              <span class=\"input-group-text\" id=\"vat\">VAT</span>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"vat_id\"\n                :value=\"store.vat_id\"\n                @blur=\"UpdateCompany($event)\"\n                aria-label=\"Sizing example input\"\n                aria-describedby=\"vat\"\n              />\n              <span class=\"input-group-text\" id=\"fiscal_code\">FISCAL CODE</span>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"fiscal_code\"\n                :value=\"store.fiscal_code\"\n                @blur=\"UpdateCompany($event)\"\n                aria-label=\"Sizing example input\"\n                aria-describedby=\"fiscal_code\"\n              />\n            </div>\n          </div>\n        </div>\n        <br />\n\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <!-- diaplsy tiptap discription -->\n            <div class=\"editor\">\n              <label for=\"\" style=\"font-size: 24px\">DESCRIPTION</label>\n              <editor-menu-bar :editor=\"editor\" v-slot=\"{ commands, isActive }\">\n                <div class=\"menubar\">\n                  <button\n                    class=\"menubar__button\"\n                    :class=\"{ 'is-active': isActive.bold() }\"\n                    @click=\"commands.bold\"\n                  >\n                    <img :src=\"publicPath + 'icons/bold.svg'\" alt=\"\" />\n                  </button>\n\n                  <button\n                    class=\"menubar__button\"\n                    :class=\"{ 'is-active': isActive.italic() }\"\n                    @click=\"commands.italic\"\n                  >\n                    <img :src=\"publicPath + 'icons/italic.svg'\" alt=\"\" />\n                  </button>\n\n                  <button\n                    class=\"menubar__button\"\n                    :class=\"{ 'is-active': isActive.strike() }\"\n                    @click=\"commands.strike\"\n                  >\n                    <img :src=\"publicPath + 'icons/strike.svg'\" alt=\"\" />\n                  </button>\n\n                  <button\n                    class=\"menubar__button\"\n                    :class=\"{ 'is-active': isActive.underline() }\"\n                    @click=\"commands.underline\"\n                  >\n                    <img :src=\"publicPath + 'icons/underline.svg'\" alt=\"\" />\n                  </button>\n\n                  <button\n                    class=\"menubar__button\"\n                    :class=\"{ 'is-active': isActive.code() }\"\n                    @click=\"commands.code\"\n                  >\n                    <img :src=\"publicPath + 'icons/code.svg'\" alt=\"\" />\n                  </button>\n\n                  <button\n                    class=\"menubar__button\"\n                    :class=\"{ 'is-active': isActive.paragraph() }\"\n                    @click=\"commands.paragraph\"\n                  >\n                    <img :src=\"publicPath + 'icons/paragraph.svg'\" alt=\"\" />\n                  </button>\n\n                  <button\n                    class=\"menubar__button\"\n                    :class=\"{ 'is-active': isActive.heading({ level: 1 }) }\"\n                    @click=\"commands.heading({ level: 1 })\"\n                  >\n                    H1\n                  </button>\n\n                  <button\n                    class=\"menubar__button\"\n                    :class=\"{ 'is-active': isActive.heading({ level: 2 }) }\"\n                    @click=\"commands.heading({ level: 2 })\"\n                  >\n                    H2\n                  </button>\n\n                  <button\n                    class=\"menubar__button\"\n                    :class=\"{ 'is-active': isActive.heading({ level: 3 }) }\"\n                    @click=\"commands.heading({ level: 3 })\"\n                  >\n                    H3\n                  </button>\n\n                  <button\n                    class=\"menubar__button\"\n                    :class=\"{ 'is-active': isActive.bullet_list() }\"\n                    @click=\"commands.bullet_list\"\n                  >\n                    <img :src=\"publicPath + 'icons/ul.svg'\" alt=\"\" />\n                  </button>\n\n                  <button\n                    class=\"menubar__button\"\n                    :class=\"{ 'is-active': isActive.ordered_list() }\"\n                    @click=\"commands.ordered_list\"\n                  >\n                    <img :src=\"publicPath + 'icons/ol.svg'\" alt=\"\" />\n                  </button>\n\n                  <button\n                    class=\"menubar__button\"\n                    :class=\"{ 'is-active': isActive.blockquote() }\"\n                    @click=\"commands.blockquote\"\n                  >\n                    <img :src=\"publicPath + 'icons/quote.svg'\" alt=\"\" />\n                  </button>\n\n                  <button\n                    class=\"menubar__button\"\n                    :class=\"{ 'is-active': isActive.code_block() }\"\n                    @click=\"commands.code_block\"\n                  >\n                    <img :src=\"publicPath + 'icons/code.svg'\" alt=\"\" />\n                  </button>\n\n                  <button\n                    class=\"menubar__button\"\n                    @click=\"commands.horizontal_rule\"\n                  >\n                    <img :src=\"publicPath + 'icons/hr.svg'\" alt=\"\" />\n                  </button>\n\n                  <button\n                    class=\"menubar__button\"\n                    :class=\"{ 'is-active': isActive.todo_list() }\"\n                    @click=\"commands.todo_list\"\n                  >\n                    <icon name=\"checklist\" />\n                  </button>\n\n                  <button class=\"menubar__button\" @click=\"commands.undo\">\n                    <img :src=\"publicPath + 'icons/undo.svg'\" alt=\"\" />\n                  </button>\n\n                  <button class=\"menubar__button\" @click=\"commands.redo\">\n                    <img :src=\"publicPath + 'icons/redo.svg'\" alt=\"\" />\n                  </button>\n                </div>\n              </editor-menu-bar>\n              <editor-menu-bubble\n                class=\"menububble\"\n                :editor=\"editor\"\n                @hide=\"hideLinkMenu\"\n                v-slot=\"{ commands, isActive, getMarkAttrs, menu }\"\n              >\n                <div\n                  class=\"menububble\"\n                  :class=\"{ 'is-active': menu.isActive }\"\n                  :style=\"`left: ${menu.left}px; bottom: ${menu.bottom}px;`\"\n                >\n                  <form\n                    class=\"menububble__form\"\n                    v-if=\"linkMenuIsActive\"\n                    @submit.prevent=\"setLinkUrl(commands.link, linkUrl)\"\n                  >\n                    <input\n                      class=\"menububble__input\"\n                      type=\"text\"\n                      v-model=\"linkUrl\"\n                      placeholder=\"https://\"\n                      ref=\"linkInput\"\n                      @keydown.esc=\"hideLinkMenu\"\n                    />\n                    <button\n                      class=\"menububble__button\"\n                      @click=\"setLinkUrl(commands.link, null)\"\n                      type=\"button\"\n                    >\n                      <img :src=\"publicPath + 'icons/remove.svg'\" alt=\"\" />\n                    </button>\n                  </form>\n\n                  <template v-else>\n                    <button\n                      class=\"menububble__button\"\n                      @click=\"showLinkMenu(getMarkAttrs('link'))\"\n                      :class=\"{ 'is-active': isActive.link() }\"\n                    >\n                      <span>{{\n                        isActive.link() ? \"Update Link\" : \"Add Link\"\n                      }}</span>\n                      <img :src=\"publicPath + 'icons/link.svg'\" alt=\"\" />\n                    </button>\n                  </template>\n                </div>\n              </editor-menu-bubble>\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <editor-content\n                    class=\"editor__content\"\n                    :editor=\"editor\"\n                    id=\"description\"\n                    name=\"description\"\n                    @keyup.enter=\"UpdateCompany($event)\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <br />\n\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <!-- diaplsy opening hours -->\n            <div v-for=\"(opening,index) in CurrentOpeningHours\" :key=\"index\">\n              <button type=\"button\" class=\"btn btn-light\" style=\"width:160px\">\n                <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"deleteopening(index, 'all')\"></button>\n                <span v-if=\"index==0\">MONDAY</span>\n                <span v-if=\"index==1\">TUESDAY</span>\n                <span v-if=\"index==2\">WEDNESDAY</span>\n                <span v-if=\"index==3\">THURSDAY</span>\n                <span v-if=\"index==4\">FRIDAY</span>\n                <span v-if=\"index==5\">SATURDAY</span>\n                <span v-if=\"index==6\">SUNDAY</span>\n              </button>\n              <button type=\"button\" class=\"btn btn-light col-3\">\n                <input type=\"text\" class=\"col-8\" :value=\"opening[0]\" @blur=\"updateopening(index, 0, $event.target.value)\">\n                <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"deleteopening(index, 0)\"></button>\n              </button>\n              <button type=\"button\" class=\"btn btn-light col-3\">\n                <input type=\"text\" class=\"col-8\" :value=\"opening[1]\" @blur=\"updateopening(index, 1, $event.target.value)\">\n                <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"deleteopening(index, 1)\"></button>\n              </button>\n              <button type=\"button\" class=\"btn btn-light col-3\">\n                <input type=\"text\" class=\"col-8\" :value=\"opening[2]\" @blur=\"updateopening(index, 2, $event.target.value)\">\n                <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"deleteopening(index, 2)\"></button>\n              </button>\n            </div>\n            <div class=\"input-group mb-3\">\n              <label for=\"week\"><img :src=\"publicPath+'icons/plus.png'\" alt=\"\" width=24 height=24></label>\n              <select id=\"week\" v-model.lazy=\"openweek\" style=\"border:0px\">\n                <option value=\"selected\">ADD DAY</option>\n                <option value=\"0\">MONDAY</option>\n                <option value=\"1\">TUESDAY</option>\n                <option value=\"2\">WEDNESDAY</option>\n                <option value=\"3\">THURSDAY</option>\n                <option value=\"4\">FRIDAY</option>\n                <option value=\"5\">SATURDAY</option>\n                <option value=\"6\">SUNDAY</option>\n              </select>\n            </div>\n          </div>\n        </div>\n        <br />\n\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <!-- diaplsy live streaming opening hours -->\n            <div v-for=\"(living,index) in CurrentLiveStreaming\" :key=\"index\">\n              <button type=\"button\" class=\"btn btn-light\" style=\"width:160px\">\n                <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"deleteliving(index, 'all')\"></button>\n                <span v-if=\"index==0\">MONDAY</span>\n                <span v-if=\"index==1\">TUESDAY</span>\n                <span v-if=\"index==2\">WEDNESDAY</span>\n                <span v-if=\"index==3\">THURSDAY</span>\n                <span v-if=\"index==4\">FRIDAY</span>\n                <span v-if=\"index==5\">SATURDAY</span>\n                <span v-if=\"index==6\">SUNDAY</span>\n              </button>\n              <button type=\"button\" class=\"btn btn-light col-3\">\n                <input type=\"text\" class=\"col-8\" :value=\"living[0]\" @blur=\"updateliving(index, 0, $event.target.value)\">\n                <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"deleteliving(index, 0)\"></button>\n              </button>\n              <button type=\"button\" class=\"btn btn-light col-3\">\n                <input type=\"text\" class=\"col-8\" :value=\"living[1]\" @blur=\"updateliving(index, 1, $event.target.value)\">\n                <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"deleteliving(index, 1)\"></button>\n              </button>\n              <button type=\"button\" class=\"btn btn-light col-3\">\n                <input type=\"text\" class=\"col-8\" :value=\"living[2]\" @blur=\"updateliving(index, 2, $event.target.value)\">\n                <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"deleteliving(index, 2)\"></button>\n              </button>\n            </div>\n            <div class=\"input-group mb-3\">\n              <label for=\"week\"><img :src=\"publicPath+'icons/plus.png'\" alt=\"\" width=24 height=24></label>\n              <select id=\"week\" v-model.lazy=\"liveweek\" style=\"border:0px\">\n                <option value=\"selected\">ADD DAY</option>\n                <option value=\"0\">MONDAY</option>\n                <option value=\"1\">TUESDAY</option>\n                <option value=\"2\">WEDNESDAY</option>\n                <option value=\"3\">THURSDAY</option>\n                <option value=\"4\">FRIDAY</option>\n                <option value=\"5\">SATURDAY</option>\n                <option value=\"6\">SUNDAY</option>\n              </select>\n            </div>\n          </div>\n        </div>\n        <br />\n\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <!-- diaplsy categories -->\n            <button\n              type=\"button\"\n              style=\"margin-left: 10px\"\n              class=\"btn btn-success btn-sm\"\n              v-for=\"category in CurrentCategories\"\n              :key=\"category.key\"\n            >\n              <img\n                :src=\"publicPath + 'icons/' + category.star + '.png'\"\n                alt=\"\"\n                width=\"24\"\n                height=\"24\"\n                @click=\"maincategory(category.value)\"\n              />\n              {{ category.value.toUpperCase() }}\n              <button\n                type=\"button\"\n                class=\"btn-close btn-close\"\n                aria-label=\"Close\"\n                style=\"height: 10px; margin-right: -8px; color:red\"\n                @click=\"deletecategory(category.value)\"\n              ></button>\n              <!-- <img :src=\"publicPath+'icons/cross.png'\" alt=\"\" width=24 height=24> -->\n            </button>\n            <div class=\"btn-group\" style=\"margin-left: 10px\">\n              <button\n                type=\"button\"\n                class=\"btn btn-info dropdown-toggle btn-sm\"\n                data-toggle=\"dropdown\"\n                aria-expanded=\"false\"\n              >\n                <img :src=\"publicPath+'icons/plus.png'\" alt=\"\" width=24 height=24>\n                ADD CATEGORIES\n              </button>\n              <ul class=\"dropdown-menu\">\n                <li>\n                  <a\n                    class=\"dropdown-item\"\n                    @click=\"addcategory(category.id)\"\n                    v-for=\"category in Categories\"\n                    :key=\"category.id\"\n                    >{{ category.id.toUpperCase() }}</a\n                  >\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <br />\n\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <!-- diaplsy links -->\n            <div class=\"col\">\n              <label for=\"link\" style=\"font-size: 24px\">LINKS</label>\n              <table class=\"table table-hover\" id=\"link\">\n                <tbody>\n                  <tr v-for=\"link in CurrentLinks\" :key=\"link.id\">\n                    <td>\n                      <img\n                        :src=\"link.image\"\n                        alt=\"image\"\n                        with=\"20\"\n                        height=\"20\"\n                      />\n                    </td>\n                    <th>{{ link.display }}</th>\n                    <td>{{ link.url }}</td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        class=\"btn btn-dark\"\n                        v-on:click=\"DeleteLink(link.id)\"\n                      >\n                        Delete\n                      </button>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <div class=\"input-group mb-3\">\n              <label class=\"input-group-text\" for=\"addlink\">Add Link</label>\n              <select class=\"form-select\" id=\"addlink\" v-model.lazy=\"addlink\">\n                <option v-for=\"link in Links\" :key=\"link.id\" :value=\"link.id\">\n                  {{ link.display }}\n                </option>\n              </select>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                v-model.lazy=\"addlinkurl\"\n              />\n            </div>\n          </div>\n        </div>\n        <br />\n\n        <!-- diaplsy geolocation -->\n        <div class=\"w-100\">\n          <div\n            v-show=\"this.show_map\"\n            id=\"map\"\n            style=\"width: 100%; height: 200px\"\n            class=\"mb-5\"\n          ></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from \"vue\";\nimport { Editor, EditorContent, EditorMenuBar, EditorMenuBubble } from \"tiptap\";\nimport {\n  Blockquote,\n  BulletList,\n  CodeBlock,\n  HardBreak,\n  Heading,\n  HorizontalRule,\n  ListItem,\n  OrderedList,\n  TodoItem,\n  TodoList,\n  Bold,\n  Code,\n  Italic,\n  Link,\n  Strike,\n  Underline,\n  History,\n} from \"tiptap-extensions\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"../../public/menubar.scss\";\nimport \"../../public/menububble.scss\";\nimport \"vue-toast-notification/dist/theme-default.css\";\nimport L from \"leaflet\";\nconst STATUS_INITIAL = 0;\nconst STATUS_SAVING = 1;\nconst STATUS_SUCCESS = 2;\nconst STATUS_FAILED = 3;\nexport default {\n  components: {\n    EditorContent,\n    EditorMenuBar,\n    EditorMenuBubble,\n  },\n  data() {\n    return {\n      store_id: \"\",\n      store: {},\n      editor: new Editor({\n        onBlur: ({ event }) => {\n          this.UpdateCompany(event);\n        },\n        extensions: [\n          new Blockquote(),\n          new BulletList(),\n          new CodeBlock(),\n          new HardBreak(),\n          new Heading({ levels: [1, 2, 3] }),\n          new HorizontalRule(),\n          new ListItem(),\n          new OrderedList(),\n          new TodoItem({\n            nested: true,\n          }),\n          new TodoList(),\n          new Link(),\n          new Bold(),\n          new Code(),\n          new Italic(),\n          new Strike(),\n          new Underline(),\n          new History(),\n        ],\n        content: \"\",\n      }),\n      CurrentCategories: [],\n      Categories: [],\n      currentcategory: \"\",\n      categoryimg: \"\",\n      ImgUrls: [],\n      deleteimg: \"\",\n      company_name: String,\n      latitude: 43.87905182844069,\n      longitude: 11.102328300476076,\n      publicPath: process.env.BASE_URL,\n      show_map: false,\n      CurrentLinks: [],\n      Links: [],\n      addlink: \"\",\n      addlinkurl: \"\",\n      uploadedFiles: [],\n      uploadError: null,\n      currentStatus: null,\n      uploadFieldName: \"contents\",\n      openweek: \"selected\",\n      liveweek: \"selected\",\n      OpeningHours: [],\n      CurrentOpeningHours: {},\n      CurrentLiveStreaming: {},\n      LiveStreaming: [],\n      linkUrl: null,\n      linkMenuIsActive: false,\n    };\n  },\n  beforeDestroy() {\n    this.editor.destroy();\n  },\n  watch: {\n    CurrentOpeningHours(){\n      return this.CurrentOpeningHours\n    },\n    openweek: function () {\n      let flag=true\n      for(let i in this.CurrentOpeningHours){\n        if(i === this.openweek){\n          flag=false\n        }\n      }\n      if(flag){\n        if(this.openweek !== 'selected')\n        this.CurrentOpeningHours[this.openweek]=[]\n      }\n    },\n    liveweek: function () {\n      let flag=true\n      for(let i in this.CurrentLiveStreaming){\n        if(i === this.liveweek){\n          flag=false\n        }\n      }\n      if(flag){\n        if(this.liveweek !== 'selected')\n        this.CurrentLiveStreaming[this.liveweek]=[]\n      }\n    },\n    addlinkurl: function () {\n      this.AddLink().then((data) => {\n        if (data) {\n          this.Links.forEach((link) => {\n            if (this.addlink === link.id) {\n              this.CurrentLinks.push({\n                id: data.id,\n                link_id: link.id,\n                display: link.display,\n                image: link.image,\n                url: this.addlinkurl,\n              });\n              Vue.$toast.open({\n                message: \"Aggiunto con successo!\",\n                type: \"success\",\n                position: \"top-left\",\n              });\n            }\n          });\n        }\n      });\n    },\n  },\n  computed: {\n    isInitial() {\n      return this.currentStatus === STATUS_INITIAL;\n    },\n    isSaving() {\n      return this.currentStatus === STATUS_SAVING;\n    },\n    isSuccess() {\n      return this.currentStatus === STATUS_SUCCESS;\n    },\n    isFailed() {\n      return this.currentStatus === STATUS_FAILED;\n    },\n  },\n  methods: {\n    maincategory(maincategory) {\n      this.MainCategory(maincategory).then(data => {\n        if (data.status === 200) {\n          this.CurrentCategories.forEach((category) => {\n            if (category.value === maincategory) category.star = \"filled\";\n            else category.star = \"unfilled\";\n          });\n          Vue.$toast.open({\n            message: \"Selezionato con successo come categoria principale!\",\n            type: \"success\",\n            position: \"top-left\",\n          });\n        }\n      });\n    },\n    addcategory(addcategory){\n      let flag=true\n      this.CurrentCategories.forEach(category => {\n        if(addcategory === category.value){\n          flag=false\n          Vue.$toast.open({\n            message: \"La categoria esiste già!\",\n            type: \"warning\",\n            position: \"top-left\",\n          });\n        }\n      });\n      if(flag){\n        if(this.CurrentCategories.length === 0){\n          this.MainCategory(addcategory).then((data) => {\n            if (data.status === 200) {\n              Vue.$toast.open({\n                message: \"Selezionato con successo come categoria principale!\",\n                type: \"success\",\n                position: \"top-left\",\n              });\n            }\n          });\n        }\n        this.AddCategory(addcategory).then(data=>{\n          if (data.status === 200) {\n            let star=\"unfilled\"\n            if(this.CurrentCategories.length === 0)\n              star=\"filled\"\n            this.Categories.forEach(category => {\n              if(category.id === addcategory){\n                this.CurrentCategories.push({\n                  key: category.display,\n                  value: addcategory,\n                  text: category.display,\n                  star: star\n                })\n              }\n            });\n            Vue.$toast.open({\n              message: \"Aggiunto con successo!\",\n              type: \"success\",\n              position: \"top-left\",\n            });\n          }\n        })\n      }\n    },\n    deletecategory(deletecategory){\n      this.DeleteCategory(deletecategory).then(data=>{\n        if(data.status === 200){\n          for(let i in this.CurrentCategories){\n            if(this.CurrentCategories[i].value === deletecategory)\n              this.CurrentCategories.splice(i,1)\n          }\n          if(this.CurrentCategories.length === 1){\n            this.MainCategory(this.CurrentCategories[0].value)\n            this.CurrentCategories[0].star=\"filled\"\n          }\n          Vue.$toast.open({\n            message: \"Eliminato con successo!\",\n            type: \"success\",\n            position: \"top-left\"\n          })\n        }\n      })\n    },\n    reset() {\n      // reset form to initial state\n      this.currentStatus = STATUS_INITIAL;\n      this.uploadedFiles = [];\n      this.uploadError = null;\n    },\n    save(formData) {\n      // upload data to the server\n      this.currentStatus = STATUS_SAVING;\n\n      this.upload(formData)\n        .then((x) => {\n          this.uploadedFiles = [].concat(x);\n          this.currentStatus = STATUS_SUCCESS;\n        })\n        .catch((err) => {\n          this.uploadError = err.response;\n          this.currentStatus = STATUS_FAILED;\n        });\n    },\n    filesChange(fieldName, fileList) {\n      // handle file changes\n      const formData = new FormData();\n      if (!fileList.length) return;\n      formData.append(fieldName, fileList[0], fileList[0].name);\n      // save it\n      this.save(formData);\n    },\n    upload(formData) {\n      return fetch(`/api/stores/${this.store_id}/images`, {\n        method: \"POST\",\n        body: formData,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          accept: \"application/json\",\n        },\n      })\n        .then((x) => x.json())\n        .then((x) => {\n          this.saveimage(x.id, formData);\n        });\n    },\n    saveimage(id, formData) {\n      return fetch(`/api/stores/${this.store_id}/images/${id}`, {\n        method: \"POST\",\n        headers: {\n          accept: \"application/json\",\n          mimetype: formData.getAll(\"contents\")[0].type,\n        },\n        body: formData,\n      })\n        .then((res) => res.json())\n        .then((res) => {\n          if (res.status === 200) {\n            if (this.ImgUrls.length === 0) {\n              this.ImgUrls.push({\n                id: res.id,\n                url: `/api/stores/${this.store_id}/images/${res.id}`,\n                classname: \"carousel-item active\",\n              });\n              Vue.$toast.open({\n                message: \"Aggiunto con successo!\",\n                type: \"success\",\n                position: \"top-left\",\n              });\n            } else {\n              this.ImgUrls.push({\n                id: res.id,\n                url: `/api/stores/${this.store_id}/images/${res.id}`,\n                classname: \"carousel-item\",\n              });\n              Vue.$toast.open({\n                message: \"Aggiunto con successo!\",\n                type: \"success\",\n                position: \"top-left\",\n              });\n            }\n          }\n        });\n    },\n    format(time){\n      let result=''\n      if(time.indexOf(':')>-1){\n        if(time.split(':')[0]<10)\n          result = '0' + time.split(':')[0] + ':'\n        else\n          result += time.split(':')[0] + ':'\n        if(time.split(':')[1]<10)\n          result += '0' + time.split(':')[1]\n        else\n          result += time.split(':')[1]\n      }\n      else{\n        if(time<10)\n          result += '0' + time + ':00'\n        else\n          result += time + ':00'\n      }\n      return result\n    },\n    updateopening(weekday, i, openinghours){\n      if (event.target.value === \"\") {\n        this.CurrentOpeningHours[weekday].splice(i, 1);\n      } \n      else {\n        let l= this.CurrentOpeningHours[weekday].length\n        if (this.CurrentOpeningHours[weekday].length <= i) {\n          this.CurrentOpeningHours[weekday][l] = [];\n        }\n        if(openinghours.indexOf(',')>-1){\n          this.CurrentOpeningHours[weekday][l][0] = this.format(openinghours.split(\",\")[0]);\n          this.CurrentOpeningHours[weekday][l][1] = this.format(openinghours.split(\",\")[1]);\n        }\n        if(openinghours.indexOf('-')>-1){\n          this.CurrentOpeningHours[weekday][l][0] = this.format(openinghours.split(\"-\")[0]);\n          this.CurrentOpeningHours[weekday][l][1] = this.format(openinghours.split(\"-\")[1]);\n        }\n        if(openinghours.indexOf(';')>-1){\n          this.CurrentOpeningHours[weekday][l][0] = this.format(openinghours.split(\";\")[0]);\n          this.CurrentOpeningHours[weekday][l][1] = this.format(openinghours.split(\";\")[1]);\n        }\n      }\n      this.UpdateOpening().then((response) => {\n        if (response.status === 200) {\n          Vue.$toast.open({\n            message: \"Impostato con successo!\",\n            type: \"success\",\n            position: \"top-left\",\n          });\n        }\n      });\n    },\n    deleteopening(weekday, i){\n      if(i === 'all'){\n        for(let j in this.CurrentOpeningHours)\n          if(j != weekday)\n            delete this.CurrentOpeningHours[weekday]\n      }\n      else{\n        this.CurrentOpeningHours[weekday].splice(i,1)\n      }\n      this.UpdateOpening().then((response) => {\n        if (response.status === 200) {\n          Vue.$toast.open({\n            message: \"Impostato con successo!\",\n            type: \"success\",\n            position: \"top-left\",\n          });\n        }\n      });\n    },\n    updateliving(weekday, i, livinghours){\n      if (event.target.value === \"\") {\n        this.CurrentLiveStreaming[weekday].splice(i, 1);\n      } \n      else {\n        let l= this.CurrentLiveStreaming[weekday].length\n        if (this.CurrentLiveStreaming[weekday].length <= i) {\n          this.CurrentLiveStreaming[weekday][l] = [];\n        }\n        if(livinghours.indexOf(',')>-1){\n          this.CurrentLiveStreaming[weekday][l][0] = this.format(livinghours.split(\",\")[0]);\n          this.CurrentLiveStreaming[weekday][l][1] = this.format(livinghours.split(\",\")[1]);\n        }\n        if(livinghours.indexOf('-')>-1){\n          this.CurrentLiveStreaming[weekday][l][0] = this.format(livinghours.split(\"-\")[0]);\n          this.CurrentLiveStreaming[weekday][l][1] = this.format(livinghours.split(\"-\")[1]);\n        }\n        if(livinghours.indexOf(';')>-1){\n          this.CurrentLiveStreaming[weekday][l][0] = this.format(livinghours.split(\";\")[0]);\n          this.CurrentLiveStreaming[weekday][l][1] = this.format(livinghours.split(\";\")[1]);\n        }\n      }\n      this.UpdateLiving().then((response) => {\n        if (response.status === 200) {\n          Vue.$toast.open({\n            message: \"Impostato con successo!\",\n            type: \"success\",\n            position: \"top-left\",\n          });\n        }\n      });\n    },\n    deleteliving(weekday, i){\n      if(i === 'all'){\n        for(let j in this.CurrentLiveStream)\n          if(j != weekday)\n            delete this.CurrentLiveStream[weekday]\n      }\n      else{\n        this.CurrentLiveStream[weekday].splice(i,1)\n      }\n      this.UpdateLiving().then((response) => {\n        if (response.status === 200) {\n          Vue.$toast.open({\n            message: \"Impostato con successo!\",\n            type: \"success\",\n            position: \"top-left\",\n          });\n        }\n      });\n    },\n    async DeleteImage(id) {\n      const response = await fetch(\n        `/api/stores/${this.store_id}/images/${id}`,\n        {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            accept: \"application/json\",\n          },\n        }\n      );\n      if (response.status === 200) {\n        for (let i in this.ImgUrls) {\n          if (this.ImgUrls[i].id === id) {\n            this.ImgUrls.splice(i, 1);\n            if (this.ImgUrls.length !== 0) {\n              if (i === this.ImgUrls.length-1) {\n                this.ImgUrls[0].classname = \"carousel-item active\";\n              }\n              else this.ImgUrls[i].classname = \"carousel-item active\";\n            }\n          }\n        }\n        Vue.$toast.open({\n          message: \"Eliminato con successo!\",\n          type: \"success\",\n          position: \"top-left\",\n        });\n      }\n      return response;\n    },\n    async SelectLogo(logoid) {\n      if (\n        confirm(\"Vuoi scegliere questa immagine come immagine del tuo logo?\")\n      ) {\n        const response = await fetch(`/api/stores/${this.store_id}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ logo_id: logoid }),\n        });\n        if (response.status === 200) {\n          Vue.$toast.open({\n            message: \"Selezionato con successo come logo!\",\n            type: \"success\",\n            position: \"top-left\",\n          });\n        }\n        return response;\n      }\n    },\n    async UpdateCompany(event) {\n      let data = {};\n      if (event.target.className === \"ProseMirror ProseMirror-focused\") {\n        data = { description: event.target.innerHTML };\n      } else {\n        switch (event.target.name) {\n          case \"company_name\":\n            data = { company_name: event.target.value };\n            break;\n          case \"address\":\n            data = { address: event.target.value };\n            break;\n          case \"city\":\n            data = { city: event.target.value };\n            break;\n          case \"zip\":\n            data = { zip: event.target.value };\n            break;\n          case \"vat_id\":\n            data = { vat_id: event.target.value };\n            break;\n          case \"fiscal_code\":\n            data = { fiscal_code: event.target.value };\n            break;\n          default:\n            break;\n        }\n      }\n      fetch(`/api/stores/${this.store_id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      }).then((response) => {\n        if (response.status === 200) {\n          Vue.$toast.open({\n            message: \"Aggiornato con successo!\",\n            type: \"success\",\n            position: \"top-left\",\n          });\n        }\n      });\n    },\n    async UpdateOpening() {\n      const response = await fetch(`/api/stores/${this.store_id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({opening_hours: JSON.stringify(this.CurrentOpeningHours)}),\n      })\n      return response\n    },\n    async UpdateLiving() {\n      const response = await fetch(`/api/stores/${this.store_id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({live_streaming_opening_hours: JSON.stringify(this.CurrentLiveStreaming)}),\n      })\n      return response\n    },\n    initialize(store_id) {\n      if (this.latitude && this.longitude) {\n        this.show_map = true;\n        Vue.nextTick(() => {\n          // update map\n          const myIcon = L.icon({\n            iconUrl: this.publicPath + \"icons/favicon.png\",\n            iconSize: [32, 32],\n            shadowSize: [38, 38], // size of the shadow\n            iconAnchor: [22, 16],\n            shadowAnchor: [4, 62],\n            popupAnchor: [-3, -16],\n          });\n          var marker = L.marker([this.latitude, this.longitude], {\n            icon: myIcon,\n          });\n          var company_name = this.company_name;\n          var map = L.map(\"map\", {\n            dragging: !L.Browser.mobile,\n            tap: !L.Browser.mobile,\n          }).setView([this.latitude, this.longitude], 17);\n          L.DomUtil.addClass(map._container, \"leaflet-crosshair\");\n          map.on(\"click\", function (e) {\n            map.removeLayer(marker);\n            this.latitude = e.latlng.lat;\n            this.longitude = e.latlng.lng;\n            marker = L.marker([this.latitude, this.longitude], {\n              icon: myIcon,\n            });\n            marker.addTo(map).bindPopup(company_name).openPopup();\n            fetch(`/api/stores/${store_id}`, {\n              method: \"PUT\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                latitude: e.latlng.lat,\n                longitude: e.latlng.lng,\n              }),\n            }).then((response) => {\n              if (response.status === 200) {\n                Vue.$toast.open({\n                  message: \"Aggiornato con successo!\",\n                  type: \"success\",\n                  position: \"top-left\",\n                });\n              }\n            });\n          });\n          L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n            attribution:\n              '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n          }).addTo(map);\n          marker.addTo(map).bindPopup(company_name).openPopup();\n        });\n      }\n    },\n    async ChangeGeo(event) {\n      this.latitude = event.target.value.split(\",\")[0];\n      this.longitude = event.target.value.split(\",\")[1];\n      this.initialize(this.sotre_id);\n    },\n    async fetchStore(storeId) {\n      const response = await fetch(\"/api/stores/\" + storeId, {\n        mode: \"no-cors\",\n        headers: {\n          accept: \"application/json\",\n        },\n      });\n      return response.json();\n    },\n    async fetchCategory() {\n      const response = await fetch(\"/api/categories\", {\n        mode: \"no-cors\",\n        headers: {\n          accept: \"application/json\",\n        },\n      });\n      return response.json();\n    },\n    async fetchLink() {\n      const response = await fetch(\"/api/links\", {\n        mode: \"no-cors\",\n        headers: {\n          accept: \"application/json\",\n        },\n      });\n      return response.json();\n    },\n    async AddCategory(addcategory) {\n      const response = await fetch(\n        `/api/stores/${this.store_id}/categories/${addcategory}`,\n        {\n          method: \"POST\",\n          mode: \"no-cors\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            accept:\"application/json\"\n          },\n        }\n      );\n      return response;\n    },\n    async MainCategory(maincategory) {\n      const response = await fetch(\n        `/api/stores/${this.store_id}/categories/${maincategory}/main`,\n        {\n          method: \"POST\",\n          mode: \"no-cors\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            accept: \"application/json\"\n          },\n        }\n      );\n      return response;\n    },\n    async DeleteCategory(deletecategory) {\n      const response = await fetch(\n        `/api/stores/${this.store_id}/categories/${deletecategory}`,\n        {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            accept: \"application/json\"\n          },\n        }\n      );\n      return response;\n    },\n    async AddLink() {\n      const response = await fetch(\n        `/api/stores/${this.store_id}/links/${this.addlink}`,\n        {\n          method: \"POST\",\n          headers: {\n            \"content-type\": \"application/json\",\n            accept: \"application/json\",\n          },\n          body: JSON.stringify({ url: this.addlinkurl }),\n        }\n      );\n      return response.json();\n    },\n    async DeleteLink(id) {\n      if (confirm(\"Vuoi rimuovere questa categoria?\")) {\n        for (let i in this.CurrentLinks) {\n          if (this.CurrentLinks[i].id === id) {\n            this.CurrentLinks.splice(i, 1);\n          }\n        }\n        const response = await fetch(\n          `/api/stores/${this.store_id}/links/${id}`,\n          {\n            method: \"POST\",\n            mode: \"no-cors\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        if (response.status === 200) {\n          Vue.$toast.open({\n            message: \"Eliminato con successo!\",\n            type: \"success\",\n            position: \"top-left\",\n          });\n        }\n        return response;\n      }\n    },\n    onCategoryChange(currentcategory) {\n      this.Categories.forEach((category) => {\n        if (category.id === currentcategory) {\n          this.categoryimg = category.image;\n        }\n      });\n    },\n    showLinkMenu(attrs) {\n      this.linkUrl = attrs.href;\n      this.linkMenuIsActive = true;\n      this.$nextTick(() => {\n        this.$refs.linkInput.focus();\n      });\n    },\n    hideLinkMenu() {\n      this.linkUrl = null;\n      this.linkMenuIsActive = false;\n    },\n    setLinkUrl(command, url) {\n      command({ href: url });\n      this.hideLinkMenu();\n    },\n  },\n  mounted: function () {\n    this.reset();\n    this.store_id = this.$route.params.id;\n    this.fetchStore(this.store_id).then((data) => {\n      this.store = data;\n      this.editor.setContent(data.description);\n      if (data.latitude != null) this.latitude = data.latitude;\n      if (data.latitude != null) this.longitude = data.longitude;\n      this.company_name = data.company_name;\n      this.CurrentLinks = data.links;\n      if (data.opening_hours != null) {\n        this.CurrentOpeningHours = data.opening_hours;\n      }\n      if (data.live_streaming_opening_hours != null) {\n        this.CurrentLiveStreaming = data.live_streaming_opening_hours;\n      }\n      this.initialize(this.store_id);\n      for (let category in data.categories) {\n        let star=\"unfilled\"\n        if(data.main_category !== null)\n          if(category === data.main_category.display)\n            star=\"filled\"\n        this.CurrentCategories.push({\n          key: category,\n          text: category,\n          value: data.categories[category],\n          star: star,\n        });\n      }\n      for (let url in data.images) {\n        if (data.images[url] != null) {\n          if (this.ImgUrls.length === 0) {\n            this.ImgUrls.push({\n              id: data.images[url],\n              url: `/api/stores/${this.store_id}/images/${data.images[url]}`,\n              classname: \"carousel-item active\",\n            });\n          } else {\n            this.ImgUrls.push({\n              id: data.images[url],\n              url: `/api/stores/${this.store_id}/images/${data.images[url]}`,\n              classname: \"carousel-item\",\n            });\n          }\n        }\n      }\n    });\n    this.fetchCategory().then((data) => {\n      this.Categories = data;\n    });\n    this.fetchLink().then((data) => {\n      this.Links = data;\n    });\n  },\n};\n</script>\n<style lang=\"scss\">\n@import \"~variables\";\nul[data-type=\"todo_list\"] {\n  padding-left: 0;\n}\nli[data-type=\"todo_item\"] {\n  display: flex;\n  flex-direction: row;\n}\n.todo-checkbox {\n  border: 2px solid $color-black;\n  height: 0.9em;\n  width: 0.9em;\n  box-sizing: border-box;\n  margin-right: 10px;\n  margin-top: 0.3rem;\n  user-select: none;\n  -webkit-user-select: none;\n  cursor: pointer;\n  border-radius: 0.2em;\n  background-color: transparent;\n  transition: 0.4s background;\n}\n.todo-content {\n  flex: 1;\n  > p:last-of-type {\n    margin-bottom: 0;\n  }\n  > ul[data-type=\"todo_list\"] {\n    margin: .5rem 0;\n  }\n}\nli[data-done=\"true\"] {\n  > .todo-content {\n    > p {\n      text-decoration: line-through;\n    }\n  }\n  > .todo-checkbox {\n    background-color: $color-black;\n  }\n}\nli[data-done=\"false\"] {\n  text-decoration: none;\n}\n</style>"]}]}