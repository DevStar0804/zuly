{"remainingRequest":"D:\\working\\Vue\\zuly\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\working\\Vue\\zuly\\src\\pages\\Contact.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\working\\Vue\\zuly\\src\\pages\\Contact.vue","mtime":1603565810958},{"path":"D:\\working\\Vue\\zuly\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1601629561006},{"path":"D:\\working\\Vue\\zuly\\node_modules\\babel-loader\\lib\\index.js","mtime":1599704251701},{"path":"D:\\working\\Vue\\zuly\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1601629561006},{"path":"D:\\working\\Vue\\zuly\\node_modules\\vue-loader\\lib\\index.js","mtime":1601629564332}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgVnVlIGZyb20gJ3Z1ZScNCmltcG9ydCAndnVlLXRvYXN0LW5vdGlmaWNhdGlvbi9kaXN0L3RoZW1lLWRlZmF1bHQuY3NzJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIGRhdGEgKCkgew0KICAgIHJldHVybiB7DQogICAgICBwdWJsaWNQYXRoOiBwcm9jZXNzLmVudi5CQVNFX1VSTCwNCiAgICAgIHN0b3JlX2lkOiBudWxsLA0KICAgICAgY29udGFjdF9pZDogbnVsbCwNCiAgICAgIGNvbnRhY3Q6IHsgfSwNCiAgICAgIGNvdW50OiAxLA0KICAgICAgdG90YWw6IDUsDQogICAgICBmcmVlemU6IHRydWUNCiAgICB9DQogIH0sDQogIHdhdGNoOiB7DQogICAgY29udGFjdDogew0KICAgICAgaGFuZGxlciAodmFsKSB7DQogICAgICAgIGlmICghdGhpcy5mcmVlemUpIHsNCiAgICAgICAgICB0aGlzLmZyZWV6ZSA9IHRydWUNCiAgICAgICAgICBjb25zb2xlLmxvZygnUFVUID0gJywgdGhpcy5jb250YWN0KQ0KICAgICAgICAgIHRoaXMucHV0Q29udGFjdCgpLnRoZW4oZGF0YSA9PiB7DQogICAgICAgICAgICB0aGlzLmZyZWV6ZSA9IGZhbHNlDQogICAgICAgICAgICBWdWUuJHRvYXN0Lm9wZW4oDQogICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnUmljaGllc3RhIGFnZ2lvcm5hdGEnLA0KICAgICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywNCiAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ3RvcC1sZWZ0Jw0KICAgICAgICAgICAgICB9DQogICAgICAgICAgICApDQogICAgICAgICAgfQ0KICAgICAgICAgICkNCiAgICAgICAgfQ0KICAgICAgfSwNCiAgICAgIGRlZXA6IHRydWUNCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBhc3luYyBmZXRjaENvbnRhY3QgKCkgew0KICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS9zdG9yZXMvJyArIHRoaXMuc3RvcmVfaWQgKyAnL2NvbnRhY3RzLycgKyB0aGlzLmNvbnRhY3RfaWQsIHsNCiAgICAgICAgbW9kZTogJ25vLWNvcnMnLA0KICAgICAgICBoZWFkZXJzOiB7DQogICAgICAgICAgJ2FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJw0KICAgICAgICB9DQogICAgICB9DQogICAgICApDQogICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpDQogICAgfSwNCiAgICBhc3luYyBwdXRDb250YWN0ICgpIHsNCiAgICAgIGxldCBwYXlsb2FkID0gdGhpcy5jb250YWN0DQogICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL3N0b3Jlcy8nICsgdGhpcy5zdG9yZV9pZCArICcvY29udGFjdHMvJyArIHRoaXMuY29udGFjdF9pZCwgew0KICAgICAgICBtZXRob2Q6ICdQVVQnLA0KICAgICAgICBoZWFkZXJzOiB7DQogICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywNCiAgICAgICAgICAnYWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nDQogICAgICAgIH0sDQogICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHBheWxvYWQpDQogICAgICB9DQogICAgICApDQogICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpDQogICAgfQ0KICB9LA0KICBtb3VudGVkOiBmdW5jdGlvbiAoKSB7DQogICAgdGhpcy5zdG9yZV9pZCA9IHRoaXMuJHJvdXRlLnBhcmFtcy5pZA0KICAgIHRoaXMuY29udGFjdF9pZCA9IHRoaXMuJHJvdXRlLnBhcmFtcy5jb250YWN0X2lkDQogICAgbGV0IHNlbGYgPSB0aGlzDQogICAgc2VsZi5mZXRjaENvbnRhY3QoKS50aGVuKGRhdGEgPT4gew0KICAgICAgc2VsZi5jb250YWN0ID0gZGF0YS5jb250YWN0DQogICAgICBWdWUubmV4dFRpY2soKCkgPT4geyBzZWxmLmZyZWV6ZSA9IGZhbHNlIH0pDQogICAgfSkNCiAgfQ0KfQ0K"},{"version":3,"sources":["Contact.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Contact.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n  <div class=\"container mt-3\">\r\n    <small class=\"text-muted\">{{ $options.__file }}</small>\r\n    <h1 class=\"text-primary font-weight-bold\">\r\n      <router-link to=\"/contacts\"><img src=\"~bootstrap-icons/icons/caret-left-fill.svg\" alt=\"caret icon\" width=\"30\" height=\"30\"></router-link>\r\n      Contatto {{ count }} di {{ total }}\r\n    </h1>\r\n    <ul class=\"list-group\">\r\n      <li class=\"list-group-item list-group-item-dark\">Nome</li>\r\n      <li class=\"list-group-item list-group-item-light\">\r\n        <input name=\"fname\" autocomplete=\"given-name\" type=\"text\" class=\"px-3 py-1 w-100 rounded mb-2\" v-model.lazy=\"contact.name\" />\r\n      </li>\r\n      <li class=\"list-group-item list-group-item-dark\">Data</li>\r\n      <li class=\"list-group-item list-group-item-light\">{{ contact.mtime }}</li>\r\n      <li class=\"list-group-item list-group-item-dark\">Richiesta</li>\r\n      <li class=\"list-group-item list-group-item-light\">\r\n        <textarea class=\"rounded px-3 py-2 mb-2 w-100\" v-model.lazy=\"contact.request\"></textarea>\r\n      </li>\r\n      <li class=\"list-group-item list-group-item-dark\">Numero di telefono</li>\r\n      <li class=\"list-group-item list-group-item-light\">\r\n        <input name=\"mobile\" autocomplete=\"tel\" type=\"number\" class=\"px-3 py-1 w-100 rounded mb-2\" v-model.lazy=\"contact.telephone_number\" />\r\n        <a class=\"btn btn-secondary rounded-circle\" href=\"#\" role=\"button\" data-title=\"Chiama col telefono\"><img src=\"~bootstrap-icons/icons/telephone-outbound.svg\" alt=\"phone icon\" width=\"30\" height=\"30\"></a>\r\n        <a  data-title=\"Chiama con WhatsApp\" class=\"\" href=\"#\" role=\"button\"><img :src=\"publicPath + 'WhatsApp.svg'\" alt=\"whatsapp icon\" width=\"60\" height=\"60\"></a>\r\n      </li>\r\n      <li class=\"list-group-item list-group-item-dark\">Email</li>\r\n      <li class=\"list-group-item list-group-item-light\">\r\n        <input name=\"email\" autocomplete=\"email\" type=\"email\" class=\"px-3 py-1 w-100 rounded mb-2\" v-model.lazy=\"contact.email\" />\r\n      </li>\r\n      <li class=\"list-group-item list-group-item-dark\">Preferenze di contatto</li>\r\n      <li class=\"list-group-item list-group-item-light\">\r\n        <input type=\"text\" class=\"px-3 py-1 w-100 rounded mb-2\" v-model.lazy=\"contact.preference\" />\r\n      </li>\r\n    </ul>\r\n    <router-link class=\"btn btn-secondary btn-lg w-100 mt-3 mb-3\" :to=\"'/store/' + store_id + '/live/' + contact_id\" role=\"button\"><img src=\"~bootstrap-icons/icons/camera-reels.svg\" alt=\"phone icon\" width=\"30\" height=\"30\"> Avvia il live-streaming</router-link>\r\n    <button type=\"button\" class=\"btn btn-secondary btn-lg w-100 mt-3 mb-3\">Proposta di acquisto</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Vue from 'vue'\r\nimport 'vue-toast-notification/dist/theme-default.css'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      publicPath: process.env.BASE_URL,\r\n      store_id: null,\r\n      contact_id: null,\r\n      contact: { },\r\n      count: 1,\r\n      total: 5,\r\n      freeze: true\r\n    }\r\n  },\r\n  watch: {\r\n    contact: {\r\n      handler (val) {\r\n        if (!this.freeze) {\r\n          this.freeze = true\r\n          console.log('PUT = ', this.contact)\r\n          this.putContact().then(data => {\r\n            this.freeze = false\r\n            Vue.$toast.open(\r\n              {\r\n                message: 'Richiesta aggiornata',\r\n                type: 'success',\r\n                position: 'top-left'\r\n              }\r\n            )\r\n          }\r\n          )\r\n        }\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchContact () {\r\n      const response = await fetch('/api/stores/' + this.store_id + '/contacts/' + this.contact_id, {\r\n        mode: 'no-cors',\r\n        headers: {\r\n          'accept': 'application/json'\r\n        }\r\n      }\r\n      )\r\n      return response.json()\r\n    },\r\n    async putContact () {\r\n      let payload = this.contact\r\n      const response = await fetch('/api/stores/' + this.store_id + '/contacts/' + this.contact_id, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(payload)\r\n      }\r\n      )\r\n      return response.json()\r\n    }\r\n  },\r\n  mounted: function () {\r\n    this.store_id = this.$route.params.id\r\n    this.contact_id = this.$route.params.contact_id\r\n    let self = this\r\n    self.fetchContact().then(data => {\r\n      self.contact = data.contact\r\n      Vue.nextTick(() => { self.freeze = false })\r\n    })\r\n  }\r\n}\r\n</script>"]}]}