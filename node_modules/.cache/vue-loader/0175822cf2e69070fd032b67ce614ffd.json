{"remainingRequest":"D:\\working\\Vue\\zuly\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\working\\Vue\\zuly\\node_modules\\vue2-location-picker\\src\\LocationPicker.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\working\\Vue\\zuly\\node_modules\\vue2-location-picker\\src\\LocationPicker.vue","mtime":1527250547000},{"path":"D:\\working\\Vue\\zuly\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\working\\Vue\\zuly\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\working\\Vue\\zuly\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\working\\Vue\\zuly\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\working\\Vue\\zuly\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubWFwX2NvbnRhaW5lciwgI21hcCB7CiAgICBtaW4taGVpZ2h0OiAyMDBweDsKICAgIGhlaWdodDogMTAwJTsKICAgIHdpZHRoOiAxMDAlOwp9CgoucGFjLWNhcmQgewogICAgbWFyZ2luOiAxMHB4IDEwcHggMCAwOwogICAgYm9yZGVyLXJhZGl1czogMnB4IDAgMCAycHg7CiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogICAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94OwogICAgb3V0bGluZTogbm9uZTsKICAgIGJveC1zaGFkb3c6IDAgMnB4IDZweCByZ2JhKDAsIDAsIDAsIDAuMyk7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwp9CgojcGFjLWNvbnRhaW5lciB7CiAgICBwYWRkaW5nLWJvdHRvbTogMTJweDsKICAgIG1hcmdpbi1yaWdodDogMTJweDsKfQoKLnBhYy1jb250YWluZXIgewogICAgei1pbmRleDogOTk5OQp9CgoucGFjLWNvbnRyb2xzIHsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgIHBhZGRpbmc6IDVweCAxMXB4Owp9CgoucGFjLWNvbnRyb2xzIGxhYmVsIHsKICAgIGZvbnQtc2l6ZTogMTNweDsKICAgIGZvbnQtd2VpZ2h0OiAzMDA7Cn0KCiNwYWMtaW5wdXQgewogICAgcGFkZGluZzogN3B4IDE0cHg7CiAgICBtYXJnaW46IDEwcHg7CiAgICB3aWR0aDogMzAlOwogICAgbWluLXdpZHRoOiAzMDBweDsKICAgIGZvbnQtc2l6ZTogMTVweDsKICAgIGZvbnQtd2VpZ2h0OiAzMDA7CiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsKICAgIGJvcmRlcjogMDsKICAgIGJvcmRlci1yYWRpdXM6IDJweCAwIDAgMnB4OwogICAgYm94LXNoYWRvdzogMCAycHggNnB4IHJnYmEoMCwgMCwgMCwgLjMpOwp9CgojcGFjLWlucHV0OmZvY3VzIHsKICAgIGJvcmRlci1jb2xvcjogIzRkOTBmZTsKfQo="},{"version":3,"sources":["LocationPicker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"LocationPicker.vue","sourceRoot":"node_modules/vue2-location-picker/src","sourcesContent":["<template>\n    <div class=\"map_container\">\n        <div id=\"map\"></div>\n        <input type=\"text\" class=\"controls\" id=\"pac-input\"/>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {\n            options: {\n                type: Object,\n                required: false,\n                default() {\n                    return {\n                        map: {/** other map options **/},\n                        marker: {/** marker options **/},\n                        autocomplete: {/** autocomplete options **/}\n                    }\n                }\n            },\n            value: {\n                type: Object,\n                required: false,\n                default() {\n                    return {lat: 41.0082376, lng: 28.97835889999999}\n                }\n            },\n        },\n        data() {\n            return {\n                map: null,\n                marker: null,\n                autocomplete: null,\n                val: {lat: 41.0082376, lng: 28.97835889999999},\n            }\n        },\n        components: {},\n        methods: {\n            geocodeLocation(e) {\n                this.val = {lat: this.marker.getPosition().lat(), lng: this.marker.getPosition().lng()}\n                this.map.setCenter(this.val);\n                this.map.panTo(this.val)\n                this.$emit('input', this.val)\n            },\n            moveMarker() {\n                document.getElementById('pac-input').value = ''\n                let place = this.autocomplete.getPlace()\n                if (!place.geometry) {\n                    indow.alert(\"No details available for input: '\" + place.name + \"'\");\n                    return;\n                }\n                this.map.setCenter(place.geometry.location);\n                this.map.setZoom(14);\n                this.marker.setPosition(place.geometry.location);\n                this.marker.setVisible(true); \n                this.val = {lat: place.geometry.location.lat(), lng: place.geometry.location.lng()}\n                this.$emit('input', this.val)\n            },\n\n        },\n        watch: {\n            value(newValue) {\n                if (newValue != undefined && typeof newValue == 'object' && newValue.lat && newValue.lng) {\n                    this.val = newValue\n                    this.map.setCenter(this.val);\n                    this.map.setZoom(14);\n                    this.marker.setPosition(this.val);\n                    this.$emit('input', this.val)\n                }\n            }\n        },\n        mounted() {\n\n            if (!(this.value == undefined || typeof this.value != 'object' || (typeof this.value == 'object' && (!this.value.lat || !this.value.lng)))) {\n                this.val = this.value\n            }\n            if (!this.options.map) this.options.map = {}\n            if (!this.options.marker) this.options.marker = {}\n            if (!this.options.autocomplete) this.options.autocomplete = {}\n            this.$emit('input', this.val)\n            this.options.map.center = this.val\n            let input = document.getElementById('pac-input');\n            this.map = new google.maps.Map(document.getElementById('map'), Object.assign({\n                center: {lat: 0, lng: 0},\n                zoom: 15,\n            }, this.options.map))\n            this.marker = new google.maps.Marker(Object.assign({\n                map: this.map,\n                position: this.map.getCenter(),\n                draggable: true\n            }, this.options.marker))\n\n\n            this.autocomplete = new google.maps.places.Autocomplete(input, this.options.autocomplete)\n            this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\n            // events\n            this.marker.addListener('dragend', this.geocodeLocation)\n            this.autocomplete.addListener('place_changed', this.moveMarker)\n\n        },\n    }\n</script>\n<style>\n    .map_container, #map {\n        min-height: 200px;\n        height: 100%;\n        width: 100%;\n    }\n\n    .pac-card {\n        margin: 10px 10px 0 0;\n        border-radius: 2px 0 0 2px;\n        box-sizing: border-box;\n        -moz-box-sizing: border-box;\n        outline: none;\n        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n        background-color: #fff;\n    }\n\n    #pac-container {\n        padding-bottom: 12px;\n        margin-right: 12px;\n    }\n\n    .pac-container {\n        z-index: 9999\n    }\n\n    .pac-controls {\n        display: inline-block;\n        padding: 5px 11px;\n    }\n\n    .pac-controls label {\n        font-size: 13px;\n        font-weight: 300;\n    }\n\n    #pac-input {\n        padding: 7px 14px;\n        margin: 10px;\n        width: 30%;\n        min-width: 300px;\n        font-size: 15px;\n        font-weight: 300;\n        text-overflow: ellipsis;\n        border: 0;\n        border-radius: 2px 0 0 2px;\n        box-shadow: 0 2px 6px rgba(0, 0, 0, .3);\n    }\n\n    #pac-input:focus {\n        border-color: #4d90fe;\n    }\n</style>\n"]}]}